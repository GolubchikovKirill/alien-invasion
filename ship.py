import pygameclass Ship:    def __init__(self, ai_game):        """Инициализирует корабль и задает его начальную позицию."""        self.screen = ai_game.screen        self.settings = ai_game.settings        self.screen_rect = ai_game.screen.get_rect()        # Загружает изображение корабля и получает прямоугольник.        self.image = pygame.image.load('images/ship.png').convert_alpha()        self.rect = self.image.get_rect()        new_size = (70, 70)  # Уменьшаем размер корабля        self.image = pygame.transform.scale(self.image, new_size)        # Каждый новый корабль появляется у нижнего края экрана.        self.rect.midbottom = self.screen_rect.midbottom        # Сохранение вещественной координаты центра корабля.        self.x = float(self.rect.x)        # Флаг перемещения: начинаем с неподвижного корабля.        self.moving_right = False        self.moving_left = False        self.moving_up = False        self.moving_down = False        # Начальное количество жизней        self.health = 3        # Загружаем изображения для сердец        self.heart_full = pygame.image.load('images/heart_full.png').convert_alpha()        self.heart_width = self.heart_full.get_width()        self.heart_height = self.heart_full.get_height()    def update(self):        """Обновляет позицию корабля с учетом флага."""        if self.moving_right and self.rect.right < self.screen_rect.right:            self.x += self.settings.ship_speed        if self.moving_left and self.rect.left > 0:            self.x -= self.settings.ship_speed        if self.moving_up and self.rect.top > 0:            self.rect.top -= self.settings.ship_speed        if self.moving_down and self.rect.bottom < self.screen_rect.bottom:            self.rect.bottom += self.settings.ship_speed        # Обновляем прямоугольник (rect) для отображения        self.rect.x = self.x    def blitme(self):        """Рисует корабль в текущей позиции."""        self.screen.blit(self.image, self.rect)    def draw_health_bar(self):        """Рисует полоски здоровья (или сердца) в верхнем левом углу экрана."""        for i in range(self.health):            x_pos = 10 + i * (self.heart_width + 5)  # 5 — это отступ между сердечками            self.screen.blit(self.heart_full, (x_pos, 10))  # Рисуем полное сердце